name: CI
on:
  - push
  - pull_request
permissions: {}
jobs:
  check-latest-versions:
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check latest versions
        run: ./check-latest-versions.sh
  build:
    permissions:
      contents: read
    name: build-${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: check-latest-versions
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
        platform:
          - 'linux-x64'
          - 'linux-arm'
          - 'linux-musl-x64'
          - 'win-x64'
          - 'win-x64.net452'
          - 'win-x86'
          - 'win-x86.net452'
          - 'win-arm64'
        include:
          - os: macos-13
            platform: 'osx-x64'
          - os: macos-14
            platform: 'osx-arm64'
          - os: ubuntu-24.04-arm
            platform: 'linux-arm64'
          - os: ubuntu-24.04-arm
            platform: 'linux-musl-arm64'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Reuse the previously built linux-arm Docker image instead of building it from scratch.
      - name: Download previously built Docker image
        id: fetch-docker
        if: matrix.platform == 'linux-arm'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Fetching artifacts from another pipeline, or even a different run of the same pipeline,
        # is currently not well-supported in GitHub Actions. We must use the GitHub REST API to
        # download the last successful uploaded artifact.
        run: |
          gh api repos/:owner/:repo/actions/artifacts \
            -q 'first(.artifacts|.[]|select(.name=="docker-${{ matrix.platform }}" and .expired==false)|.archive_download_url)' \
            | xargs gh api > tmp.zip || exit 0
          unzip tmp.zip
          rm tmp.zip
          echo "docker_file_name=docker-${{ matrix.platform }}.tar.gz" >> $GITHUB_OUTPUT
      - name: Load relevant image locally
        if: steps.fetch-docker.outputs.docker_file_name != ''
        run: docker load -i ${{ steps.fetch-docker.outputs.docker_file_name }} || echo "Could not load Docker image"
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          pipx install meson==1.7.2
          brew install automake nasm python-packaging
      - name: Build ${{ matrix.platform }}
        run: ./build-exp.sh ${{ matrix.platform }}
      - name: Upload ${{ matrix.platform }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: libvips-*-${{ matrix.platform }}.tar.gz
          compression-level: 0
          retention-days: 1
          if-no-files-found: error
      - name: Save Docker image
        if: matrix.platform == 'linux-arm'
        run: docker save vips-dev-${{ matrix.platform }}:latest | gzip > docker-${{ matrix.platform }}.tar.gz
      - name: Upload Docker image as build artifact
        if: matrix.platform == 'linux-arm'
        uses: actions/upload-artifact@v4
        with:
          name: docker-${{ matrix.platform }}
          path: docker-${{ matrix.platform }}.tar.gz
  release:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: build-*
          merge-multiple: true
      - name: Create GitHub release for tag
        uses: ncipollo/release-action@v1
        with:
          artifacts: libvips-*.tar.gz
          artifactContentType: application/gzip
          omitBody: true
          prerelease: true
